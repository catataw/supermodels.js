{"name":"supermodels.js","tagline":"Turn plain old javascript objects into observable, traversable, validatable and composable supermodels","body":"# supermodels.js\r\n\r\nTurn plain old javascript objects into observable, traversable, validatable and composable supermodels.\r\n\r\n`npm install supermodels.js`\r\n\r\nsupermodels can be used for all sorts of purposes including:\r\n\r\n 1. Acting as the `M` and `C|P` in an MV* paradigm\r\n 2. Defining your Business Objects (Customer, Address, Order etc.), their relationships and any validation rules.\r\n 3. Building blocks like Services, Factories, Singletons.\r\n \r\nFor use in Node.js, the browser (3Kb gzipped) or any other JavaScript environment.\r\n\r\n### supermodels(schema [, initializer])\r\n\r\nReturns a model constructor function for the given `schema` value. The optional `initializer` can be passed as a function that will be called on creating each instance of a model.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}